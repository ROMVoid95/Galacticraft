plugins {
    id "fabric-loom"
    id "com.github.johnrengelman.shadow" version "5.0.0"
}

configurations {
    shadow
}
repositories {
    maven {
        name = "BuildCraft"
        url = "https://mod-buildcraft.com/maven"
    }
    maven {
        name = "Modmuss50"
        url = "https://maven.modmuss50.me/"
    }
    maven {
        name = "Shedaniel"
        url = "https://dl.bintray.com/shedaniel/cloth/"
    }
    maven {
        name = "Ladysnake Libs"
        url = 'https://dl.bintray.com/ladysnake/libs'
    }
}

dependencies {
    minecraft("com.mojang:minecraft:${rootProject.architect.minecraft}")
    mappings(minecraft.officialMojangMappings())
    modCompile("net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}")
    modCompile("me.shedaniel:architectury:${rootProject.architectury_version}:fabric")

    modCompile("net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}")
    modCompile("alexiil.mc.lib:libblockattributes-core:${rootProject.lba_version}") { transitive = false }
    modCompile("alexiil.mc.lib:libblockattributes-items:${rootProject.lba_version}") { transitive = false }
    modCompile("alexiil.mc.lib:libblockattributes-fluids:${rootProject.lba_version}") { transitive = false }
    modApi("teamreborn:energy:${rootProject.tr_energy_version}") { transitive = false }

    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${rootProject.cardinal_components_version}"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${rootProject.cardinal_components_version}"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${rootProject.cardinal_components_version}"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${rootProject.cardinal_components_version}"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-level:${rootProject.cardinal_components_version}"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-level:${rootProject.cardinal_components_version}"

    compile(project(":common")) {
        transitive = false
    }
    shadow(project(":common")) {
        transitive = false
    }
}

loom {
    accessWidener file("src/main/resources/galacticraft-fabric.accesswidener")
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier "shadow"
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archivePath)
}